questions:
->DO WE NEED TO DO USER MANAGEMENT VIA THE UI?? (register, login, verify, delete, edit, user roles)
        IF NOT, THEN MAKE THE DATABASE COLUMN ENCRYPTED AND JUST STORE THE PASSWORDS IN IT AS IS- 
        TO MAKE THE REGISTRATIONS BY HAND

notes:
- the session permanence is commented out for debugging purposes (or in general if i decide to do so)

pending:
- how to return the images?? should their directory be available for everyone to access?


Meeting Notes:

[DONE]
- Implemented a very generic database schema (can easily be extended)
- Implemented register, login, logout functionality and UI pages
        > Currently: must use database to verify and edit a user;
                   password cannot be changed, must remove user and re-register them;
                   no user roles, everyone is an Admin.
- Created an endpoint that queries the database and returns the URLs for the matching GIFs
        among with their ids.
        > The URLs can only be accessed while the user's session is not expired
                -currently 1 day after last login. After expiration the user must login again.
                >> Maybe this should be replaced by accessTokens(?)
                        Currently do not know how they are implemented, but can find out.
                >> Can just allow open access to all the endpoints from which we retrieve GIF data.
- Created the Add new GIF page for heads and torsos.
- Created a query page for testing the API (i.e. getting the same results as the user
        will get on their phone)


[PENDING]
- Create a page for viewing all users
        > Functionality: verify user,
                         change user password,
                         delete user (SOS: cannot delete self therefore do not provide delete option for self-
                                                do provide the change password option though).
        > Shows all verified and unverified users (above functionality applies to both).
- Create a page for editing (metadata) or deleting GIFs
        > Functionality: use query-like interface to find an GIF,
                         edit GIF metadata (except filename and type- to change type, delete and re-insert),
                         delete GIF.

- Create an Add New GIF page for fullbody GIFs
        > Must allow the user to use similar functionality to the one of query page in order
                to select the head and torso which are combined by the fullbody that is to be
                uploaded. (to avoid manual search and typing of these 2 ids)


